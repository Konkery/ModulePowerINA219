const ClassMiddleSensor=require("ClassSensor.min.js");class ClassPowerINA219 extends ClassMiddleSensor{constructor(_opts,_sensor_props){ClassMiddleSensor.apply(this,[_opts,_sensor_props]),this._Name="ClassPowerINA219",this._Sensor=require("BaseClassINA219.min.js").connect(_opts.bus,void 0,_opts_address),this._MinPeriod=250,this._UsedChannels=[],this._Interval,this.Init(_sensor_props)}Init(_sensor_props){super.Init(_sensor_props),this._Sensor.initDevice()}Start(_num_channel,_period){let period="number"==typeof _period&_period>=this._MinPeriod?_period:this._MinPeriod;this._UsedChannels.includes(_num_channel)||this._UsedChannels.push(_num_channel),this._Interval||(this._Interval=setInterval(()=>{this._UsedChannels.includes(0)&&(this.Ch0_Value=this._Sensor.getShuntMicroVolts()),this._UsedChannels.includes(1)&&(this.Ch1_Value=this._Sensor.getBusMilliVolts()/1e3),this._UsedChannels.includes(2)&&(this.Ch2_Value=1e3*this._Sensor.getBusMicroAmps()),this._UsedChannels.includes(3)&&(this.Ch3_Value=1e3*this._Sensor.getBusMicroWatts())},period))}ChangeFreq(_num_channel,freq){clearInterval(this._Interval),setTimeout(()=>this.Start(freq),this._Minfrequency)}Stop(_num_channel){_num_channel?this._UsedChannels.splice(this._UsedChannels.indexOf(_num_channel)):(this._UsedChannels=[],clearInterval(this._Interval),this._Interval=null)}}exports=ClassPowerINA219;