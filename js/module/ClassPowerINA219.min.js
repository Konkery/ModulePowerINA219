class LowLevelClassINA{constructor(_bus,_address){this._I2c=_bus,this._Address=_address||64}ReadWord(_reg){this._I2c.writeTo(this._Address,128|_reg);const data=this._I2c.readFrom(this._Address,2);return data[0]<<8|data[1]}WriteWord(_reg,_data){this._I2c.writeTo(this._Address,[_reg,_data>>8,_data])}WhoIam(_wai){return this.ReadWord(0)!==(_wai||14751)}Reset(){this.WriteWord(0,32768)}Calibrate(_val){this.WriteWord(5,_val)}UnsignedToSigned(_val){return 32768&_val?_val-65536:_val}ReadShuntVoltageRaw(){return this.UnsignedToSigned(this.ReadWord(1))}ReadBusVoltageRaw(){return this.ReadWord(2)>>3}ReadPowerRaw(){return this.ReadWord(3)}ReadCurrentRaw(){return this.UnsignedToSigned(this.ReadWord(4))}ConfigureBVR(_val){let cfg=this.ReadWord(0);cfg&=57343,32==_val&&(cfg|=8192),this.WriteWord(0,cfg)}ConfigureGain(_val){let cfg=this.ReadWord(0);const pga={40:0,80:2048,160:4096,320:6144};cfg&=59391,cfg|=pga[_val],this.WriteWord(0,cfg)}ConfigureBusADC(_val){let cfg=this.ReadWord(0);const adc={9:0,10:128,11:256,12:384,2:1152,4:1280,8:1408,16:1536,32:1664,64:1792,128:1920};cfg&=63615,cfg|=adc[_val],this.WriteWord(0,cfg)}ConfigureShuntADC(_val){let cfg=this.ReadWord(0);const adc={9:0,10:128,11:256,12:384,2:1152,4:1280,8:1408,16:1536,32:1664,64:1792,128:1920};cfg&=65415,cfg|=adc[_val]>>4,this.WriteWord(0,cfg)}ConfigureMode(_val){let cfg=this.ReadWord(0);cfg&=65528,cfg|=_val,this.WriteWord(0,cfg)}}class ClassPowerINA219 extends ClassSensor{constructor(_opts){ClassSensor.call(this,_opts),this._Name="ClassPowerINA219",this._Sensor=new LowLevelClassINA(_opts.bus,_opts.address),this._Config=_opts.config||{},this._MinPeriod=20,this._Interval,this.Init()}Init(){if(this._Sensor.Reset(),this._Sensor.WhoIam(this._Config.WAI))throw new Error("INA219 not found!");this._Config.maxCurrent=this._Config.maxCurren||3.2768,this._Config.rShunt=this._Config.rShunt||.1,this._Config.currentLSB=3.0517578125*this._Config.maxCurrent/1e5,console.log(this._Config),this._Sensor.Calibrate(Math.round(.04096/(this._Config.currentLSB*this._Config.rShunt))),this.SetBusVoltageRange(this._Config.busVoltageRange),this.SetGain(this._Config.gain),this.SetBusADC(this._Config.busADC),this.SetShuntADC(this._Config.shuntADC),this.SetSensorMode(this._Config.mode)}SetMaxCurrent(_amps){this._Config.maxCurrent=_amps||3.2768,this._Config.currentLSB=3.0517578125*this._Config.maxCurrent/1e5,this._Sensor.Calibrate(Math.round(.04096/(this._Config.currentLSB*this._Config.rShunt)))}SetShuntResist(_ohms){this._Config.rShunt=_ohms||.1,this._Sensor.Calibrate(Math.round(.04096/(this._Config.currentLSB*this._Config.rShunt)))}SetBusVoltageRange(_bvr){const bvr_values=[16,32];bvr_values.includes(_bvr)&&this._Sensor.ConfigureBVR(_bvr)}SetGain(_gain){const gain_values=[40,80,160,320];gain_values.includes(_gain)&&this._Sensor.ConfigureGain(_gain)}SetBusADC(_badc){const adc_values=[9,10,11,12,2,4,8,16,32,64,128];adc_values.includes(_badc)&&this._Sensor.ConfigureBusADC(_badc)}SetShuntADC(_sadc){const adc_values=[9,10,11,12,2,4,8,16,32,64,128];adc_values.includes(_sadc)&&this._Sensor.ConfigureShuntADC(_sadc)}SetSensorMode(_mode){const modes=[0,1,2,3,4,5,6,7];modes.includes(_mode)&&this._Sensor.ConfigureMode(_mode)}GetShuntVoltage(){return 1e-5*this._Sensor.ReadShuntVoltageRaw()}GetBusVoltage(){return.004*this._Sensor.ReadBusVoltageRaw()}GetCurrent(){return this._Sensor.ReadCurrentRaw()*this._Config.currentLSB}GetPower(){return this._Sensor.ReadPowerRaw()*this._Config.currentLSB*20}Start(_num_channel,_period){let period="number"==typeof _period&_period>=this._MinPeriod?_period:this._MinPeriod;this._ChStatus[_num_channel]=1,this._Interval||(this._Interval=setInterval(()=>{this._ChStatus[0]&&(this.Ch0_Value=this.GetShuntVoltage()),this._ChStatus[1]&&(this.Ch1_Value=this.GetBusVoltage()),this._ChStatus[2]&&(this.Ch2_Value=this.GetCurrent()),this._ChStatus[3]&&(this.Ch3_Value=this.GetPower())},period))}ChangeFreq(_num_channel,freq){clearInterval(this._Interval),setTimeout(()=>this.Start(freq),this._MinPeriod)}Stop(_num_channel){this._ChStatus[_num_channel]=0,0==this._ChStatus[0]&&0==this._ChStatus[1]&&0==this._ChStatus[2]&&0==this._ChStatus[3]&&(clearInterval(this._Interval),this._Interval=null)}}exports=ClassPowerINA219;